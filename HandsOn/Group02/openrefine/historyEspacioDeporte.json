[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "grel:value.toLowercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression grel:value.toLowercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value.replace(\"  \",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression value.replace(\"  \",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value.replace(\"   \",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression value.replace(\"   \",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "jython:import re\npista = re.findall('(pistas? de .*?)[,|y|-|\\.]',value)\ncircuito = re.findall('(ciruito? de .*?)[,|y]',value)\ncampo = re.findall('pampos? de fútbol',value)\n\n#Añadir las palabras encontradas a la cadena\nlista_provisional = pista + campo + circuito\n\n#Otros equipamientos que quiero buscar\nlista_equipamientos = ['piscina', 'pabellón polideportivo', 'gimnasio', 'sala de musculación']\n\n# Palabras que tienen varias una apariciones y quiero que me coja la primera\ndef buscar_palabras_y_add(lista_palabras, cadena_texto, lista_provisional):\n    for palabra in lista_palabras:\n        #Busco si la palabra está en la celda\n        palabra_buscada = re.search(palabra,cadena_texto)\n        #Si la palabra está la añado a mi lista de equipamientos encontrados\n        if palabra_buscada is not None:\n            palabra_buscada = palabra_buscada.group(0)\n            lista_provisional.append(palabra_buscada)\n    return lista_provisional\n\n#Llamo a la función\nlista_final = buscar_palabras_y_add(lista_equipamientos,value,lista_provisional)\n\n#Convierto la lista en una única cadena\nvalue = \", \".join(lista_final)\nreturn value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression jython:import re\npista = re.findall('(pistas? de .*?)[,|y|-|\\.]',value)\ncircuito = re.findall('(ciruito? de .*?)[,|y]',value)\ncampo = re.findall('pampos? de fútbol',value)\n\n#Añadir las palabras encontradas a la cadena\nlista_provisional = pista + campo + circuito\n\n#Otros equipamientos que quiero buscar\nlista_equipamientos = ['piscina', 'pabellón polideportivo', 'gimnasio', 'sala de musculación']\n\n# Palabras que tienen varias una apariciones y quiero que me coja la primera\ndef buscar_palabras_y_add(lista_palabras, cadena_texto, lista_provisional):\n    for palabra in lista_palabras:\n        #Busco si la palabra está en la celda\n        palabra_buscada = re.search(palabra,cadena_texto)\n        #Si la palabra está la añado a mi lista de equipamientos encontrados\n        if palabra_buscada is not None:\n            palabra_buscada = palabra_buscada.group(0)\n            lista_provisional.append(palabra_buscada)\n    return lista_provisional\n\n#Llamo a la función\nlista_final = buscar_palabras_y_add(lista_equipamientos,value,lista_provisional)\n\n#Convierto la lista en una única cadena\nvalue = \", \".join(lista_final)\nreturn value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value.replace(/ [0-9] pista/,\", pista\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression value.replace(/ [0-9] pista/,\", pista\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value.replace(\"vóle\",\"vóley\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression value.replace(\"vóle\",\"vóley\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value.replace(\"hocke\",\"hockey\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EQUIPAMIENTO using expression value.replace(\"hocke\",\"hockey\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value",
    "edits": [
      {
        "from": [
          "pista de minibaloncesto ",
          "pista de minibaloncesto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pista de minibaloncesto "
      },
      {
        "from": [
          "pista de baloncesto",
          "pista de baloncesto "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pista de baloncesto"
      },
      {
        "from": [
          "pistas de pádel , piscina, sala de musculación",
          "pistas de pádel, piscina, sala de musculación"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pistas de pádel , piscina, sala de musculación"
      },
      {
        "from": [
          "pistas de tenis , pistas de pádel, pabellón polideportivo, sala de musculación",
          "pistas de tenis, pistas de pádel, pabellón polideportivo, sala de musculación"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pistas de tenis , pistas de pádel, pabellón polideportivo, sala de musculación"
      }
    ],
    "description": "Mass edit cells in column EQUIPAMIENTO"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EQUIPAMIENTO",
    "expression": "value",
    "edits": [
      {
        "from": [
          "pista de baloncesto, pista de fútbol sala, pistas de bolos ",
          "pista de fútbol sala, pistas de baloncesto, pistas de bolos "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pista de baloncesto, pista de fútbol sala, pistas de bolos "
      },
      {
        "from": [
          "pistas de pádel, pistas de pádel (cristal) , pistas de tenis, piscina, pabellón polideportivo, sala de musculación",
          "pistas de pádel, pistas de pádel (cristal), pistas de tenis , piscina, pabellón polideportivo, sala de musculación"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pistas de pádel, pistas de pádel (cristal) , pistas de tenis, piscina, pabellón polideportivo, sala de musculación"
      },
      {
        "from": [
          "pista de patinaje",
          "pista de patinaje "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pista de patinaje"
      },
      {
        "from": [
          "pistas de pádel",
          "pistas de pádel "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pistas de pádel"
      }
    ],
    "description": "Mass edit cells in column EQUIPAMIENTO"
  }
    {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TIPO",
    "expression": "value.replace(\"/contenido/entidadesYorganismos/CentrosEspaciosDeporte/\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TIPO using expression value.replace(\"/contenido/entidadesYorganismos/CentrosEspaciosDeporte/\",\"\")"
  }
{
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TIPO",
    "expression": "value",
    "edits": [
      {
        "from": [
          "/contenido/entidadesYorganismos/AuditoriosSalasConcierto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AuditoriosSalasConcierto"
      }
    ],
    "description": "Mass edit cells in column TIPO"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TIPO",
    "expression": "value",
    "edits": [
      {
        "from": [
          "/contenido/entidadesYorganismos/CentrosEspaciosDeporte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CentrosEspaciosDeporte"
      }
    ],
    "description": "Mass edit cells in column TIPO"
  }
]
