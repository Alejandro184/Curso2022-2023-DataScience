# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ihorfHPLAKgmVkuzIJxQpEv0JzrAe6sL

**Task 07: Querying RDF(s)**
"""

#pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

#RDFLib
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(s, p, o)

print("------------------------------------------------------------------")

#SPARQL
q1 = prepareQuery('''
    SELECT DISTINCT ?subclass
    WHERE {
        ?subclass rdfs:subClassOf ns:Person.
    }
    ''',
    initNs = {"rdfs": RDFS, "ns": ns}
)
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

#RDFLib
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    print(s, p, o)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for ss, pp, oo in g.triples((None, RDF.type, s)):
        print(ss, pp, oo)

print("------------------------------------------------------------------")

#SPARQL
q2 = prepareQuery('''
    SELECT DISTINCT ?individual
    WHERE{
        {
            ?individual rdf:type ns:Person.
        }UNION{
            ?subclass rdfs:subClassOf ns:Person.
            ?individual rdf:type ?subclass.
        }
    }
    ''',
    initNs = {"rdf": RDF, "ns": ns, "rdfs": RDFS}
)
for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

#RDFLib
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    print("Person: ", s)
    for ss, pp, oo in g.triples((s, None, None)):
        print(ss, oo, pp)

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for ss, pp, oo in g.triples((None, RDF.type, s)):
        print("Person: ", ss)
        for sss, ppp, ooo in g.triples((ss, None, None)):
            print(sss, ooo, ppp)

print("------------------------------------------------------------------")

#SPARQL
q3 = prepareQuery('''
    SELECT DISTINCT ?person ?property
    WHERE{
        {
            ?person rdf:type ns:Person.
            ?person ?property ?object
        }UNION{
            ?subclass rdfs:subClassOf ns:Person.
            ?person rdf:type ?subclass.
            ?person ?property ?object
        }
    }
    ''',
    initNs = {"rdf": RDF, "ns": ns, "rdfs": RDFS}
)
for r in g.query(q3):
  print(r)