
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results

#RDFLib
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
#SparQL:

#VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
q1 = """
  PREFIX ns: <http://somewhere#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

  SELECT DISTINCT ?subClasses
  WHERE {
    ?subClasses rdfs:subClassOf ns:Person.
  }
  """
  #initNs = { "rdfs": RDFS}


for r in g.query(q1):
  print(r.subClasses)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results

#RDFLib:
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o2 in g.triples((None, RDF.type, s)):
    print(s2)

#SparQL
q2 = prepareQuery("""
  SELECT DISTINCT ?individual 
  WHERE {
    ?individual rdf:type ?subClasses.
    ?subClasses rdfs:subClassOf* ns:Person.
  }
  """,
  initNs = {"rdfs": RDFS, "ns": ns, "rdf": RDF}
)

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results
#RDFLib:
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s,p,o)
  for s,p,o in g.triples((s, None, None )):
    print(p,o)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o2 in g.triples((None, RDF.type, s)):
    print(s2,p2,o2)
    for s2,p2,o2 in g.triples((s2, None, None)):
      print(p2,o2)

#sparQL
q3 = prepareQuery("""
  SELECT DISTINCT ?name ?prop ?value
  WHERE {
    ?name rdf:type ?subClasses.
    ?subClasses rdfs:subClassOf* ns:Person.
    ?name ?prop ?value
  }
  """,
  initNs = {"rdfs": RDFS, "ns": ns, "rdf": RDF}
)

for r in g.query(q3):
  print(r)
