# -*- coding: utf-8 -*-
"""Copia de Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iqU1blvAqm6h4Q7mZJGLCboLnZDBpPmX

**Task 08: Completing missing data**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

for t in g2.triples((None, None, None)):
  g1.add(t)

#area: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y
# completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf).
# Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas.
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g1.namespace_manager.bind('ns', Namespace("http://data.org#"), override=False)
NS = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
g1.namespace_manager.bind('vcard', VCARD, override=False)
q = prepareQuery('''
  SELECT ?X ?A ?B ?C ?D WHERE { 
    {
    ?X rdf:type ns:Person.
    }
    OPTIONAL
    { 
    ?X vcard:FN ?A.
    }
    OPTIONAL
    {
    ?X vcard:Given ?B.
    }
    OPTIONAL
    {
    ?X vcard:Family ?C.
    }
    OPTIONAL
    {
    ?X vcard:EMAIL ?D.
    }
  }
  ''',
  initNs = {"rdf": RDF, "ns": NS, "vcard": VCARD}
)
print("Person,FullName,Given,Family,EMAIL")
for r in g1.query(q):
  print(r.X,",",r.A,",",r.B,",",r.C,",",r.D)
print("FIN")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""