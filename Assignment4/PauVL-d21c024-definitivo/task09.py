# -*- coding: utf-8 -*-
"""Copia de Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BkYQHV6hi1MhzHK6LxemNdrF-DCn6cYQ

**Task 09: Data linking**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.namespace import RDF, OWL
from rdflib.plugins.sparql import prepareQuery
NS = Namespace("http://data.three.org#")
NS2 = Namespace("http://data.four.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

q1 = prepareQuery('''
  SELECT ?X ?g3 ?f3 WHERE {
    ?X rdf:type ns:Person.
    ?X vcard:Family ?f3.
    ?X vcard:Given ?g3.
  }
  ''',
  initNs = {"rdf": RDF, "ns": NS, "vcard": VCARD}
)

q2 = prepareQuery('''
  SELECT ?Y ?g4 ?f4 WHERE {
    ?Y rdf:type ns2:Person.
    ?Y vcard:Family ?f4.
    ?Y vcard:Given ?g4.
  }
  ''',
  initNs = {"rdf": RDF, "vcard": VCARD, "ns2": NS2}
)

for i in g1.query(q1):
  for i2 in g2.query(q2):
    if (i.g3==i2.g4) and ((i.f3==i2.f4)):
      resource = (i.X, OWL.sameAs, i2.Y)
      g3.add(resource)
      break

print(g3.serialize(format="ttl"))