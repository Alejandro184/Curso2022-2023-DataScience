# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dDI5VNqX5_91iJ05ewp-SJtC6g9nyFup

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

### With RDFLib
print("With RDFLib:")
ns = Namespace("http://somewhere#")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

### With SPARQL
print()
print("With SPARQL:")
q1 = """
PREFIX ns: <http://somewhere#>
PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?subclasses
WHERE {
    ?subclasses rdfs:subClassOf ns:Person
}"""

# Visualize the results
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

### With RDFLib
print("With RDFLib:")
# Search for individuals
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  print(s)
# Search for subclasses of Person
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  # Individuals of the subclasses found
  for s2, p2, o2, in g.triples((None, RDF.type, s)):
    print(s2)

### With SPARQL
print()
print("With SPARQL:")
q2 = prepareQuery(
    """SELECT DISTINCT ?name
    WHERE {
      ?name rdf:type ?subclass .
      ?subclass rdfs:subClassOf* ns:Person
    }""",
    initNs = { "ns": ns, "rdf": RDF, "rdfs": RDFS})


# Visualize the results
for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

### With RDFLib
print("With RDFLib:")
# Search for individuals
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  # Properties and its values of the individuals
  for s2, p2, o2 in g.triples((s, None, None)):
    print(s2, p2, o2)
# Search for subclasses of Person
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  # Individuals of the subclasses found
  for s2, p2, o2 in g.triples((None, RDF.type, s)):
    # Properties and its values of the individuals
    for s3, p3, o3 in g.triples((s2, None, None)):
      print(s3, p3, o3)

### With SPARQL
print()
print("With SPARQL:")
q3 = prepareQuery(
    """SELECT DISTINCT ?name ?property ?value
    WHERE {
      ?name rdf:type ?subclass .
      ?subclass rdfs:subClassOf* ns:Person .
      ?name ?property ?value
    }""",
    initNs = { "ns": ns, "rdf": RDF, "rdfs": RDFS})

# Visualize the results
for r in g.query(q3):
  print(r)
